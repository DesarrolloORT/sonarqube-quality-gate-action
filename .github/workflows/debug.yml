name: Debug SonarQube Quality Gate

on:
  workflow_dispatch:
    inputs:
      sonar-host-url:
        description: 'SonarQube server URL'
        required: true
        default: 'https://your-sonar-server.com'
      sonar-project-key:
        description: 'SonarQube project key'
        required: true
      branch:
        description: 'Branch name (optional)'
        required: false

jobs:
  debug-quality-gate:
    name: Debug Quality Gate
    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Test SonarQube Quality Gate Action (with debug)
        id: quality-gate
        uses: ./
        with:
          sonar-host-url: ${{ github.event.inputs.sonar-host-url }}
          sonar-project-key: ${{ github.event.inputs.sonar-project-key }}
          sonar-token: ${{ secrets.SONAR_TOKEN }}
          github-token: ${{ secrets.GITHUB_TOKEN }}
          branch: ${{ github.event.inputs.branch }}
          disable-pr-comment: 'true' # Disable PR comments for debugging
          fail-on-quality-gate-error: 'false' # Don't fail the workflow for debugging

      - name: Print Results
        run: |
          echo "Project Status: ${{ steps.quality-gate.outputs.project-status }}"
          echo "Quality Gate Result: ${{ steps.quality-gate.outputs.quality-gate-result }}"

      - name: Test API Manually (Debug)
        run: |
          echo "Testing API manually..."
          echo "Host: ${{ github.event.inputs.sonar-host-url }}"
          echo "Project: ${{ github.event.inputs.sonar-project-key }}"

          # Test with Bearer token
          echo "Testing with Bearer token..."
          RESPONSE=$(curl -s -w "HTTPSTATUS:%{http_code}" \
            -H "Authorization: Bearer ${{ secrets.SONAR_TOKEN }}" \
            "${{ github.event.inputs.sonar-host-url }}/api/qualitygates/project_status?projectKey=${{ github.event.inputs.sonar-project-key }}")

          HTTP_STATUS=$(echo $RESPONSE | tr -d '\n' | sed -e 's/.*HTTPSTATUS://')
          BODY=$(echo $RESPONSE | sed -e 's/HTTPSTATUS\:.*//g')

          echo "Bearer token response status: $HTTP_STATUS"
          echo "Bearer token response body: $BODY"

          # Test with Basic auth if Bearer fails
          if [ "$HTTP_STATUS" != "200" ]; then
            echo "Testing with Basic auth..."
            RESPONSE2=$(curl -s -w "HTTPSTATUS:%{http_code}" \
              -u "${{ secrets.SONAR_TOKEN }}:" \
              "${{ github.event.inputs.sonar-host-url }}/api/qualitygates/project_status?projectKey=${{ github.event.inputs.sonar-project-key }}")

            HTTP_STATUS2=$(echo $RESPONSE2 | tr -d '\n' | sed -e 's/.*HTTPSTATUS://')
            BODY2=$(echo $RESPONSE2 | sed -e 's/HTTPSTATUS\:.*//g')

            echo "Basic auth response status: $HTTP_STATUS2"
            echo "Basic auth response body: $BODY2"
          fi
